#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook –≤ Telegram Bot API
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python setup_webhook.py <BOT_TOKEN> <WEBHOOK_URL>
"""

import sys
import requests
import json

def set_webhook(bot_token: str, webhook_url: str) -> bool:
    """
    –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç webhook –¥–ª—è Telegram –±–æ—Ç–∞
    
    Args:
        bot_token: –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –æ—Ç @BotFather
        webhook_url: URL webhook (–Ω–∞–ø—Ä–∏–º–µ—Ä: https://aibot-xxxxx-uc.a.run.app/webhook)
    
    Returns:
        bool: True –µ—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ, False –µ—Å–ª–∏ –æ—à–∏–±–∫–∞
    """
    url = f"https://api.telegram.org/bot{bot_token}/setWebhook"
    
    data = {
        "url": webhook_url,
        "allowed_updates": ["message", "callback_query"]  # –¢–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ —Ç–∏–ø—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    }
    
    try:
        print(f"üîó –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook: {webhook_url}")
        response = requests.post(url, json=data, timeout=30)
        
        if response.status_code == 200:
            result = response.json()
            if result.get("ok"):
                print("‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
                print(f"üì° URL: {webhook_url}")
                print(f"üìä –û–ø–∏—Å–∞–Ω–∏–µ: {result.get('description', 'N/A')}")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ API: {result.get('description', 'Unknown error')}")
                return False
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {e}")
        return False

def get_webhook_info(bot_token: str) -> dict:
    """
    –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º webhook
    
    Args:
        bot_token: –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –æ—Ç @BotFather
    
    Returns:
        dict: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ webhook
    """
    url = f"https://api.telegram.org/bot{bot_token}/getWebhookInfo"
    
    try:
        response = requests.get(url, timeout=30)
        if response.status_code == 200:
            return response.json()
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {response.status_code}")
            return {}
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {e}")
        return {}

def delete_webhook(bot_token: str) -> bool:
    """
    –£–¥–∞–ª—è–µ—Ç webhook (–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫ polling —Ä–µ–∂–∏–º—É)
    
    Args:
        bot_token: –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –æ—Ç @BotFather
    
    Returns:
        bool: True –µ—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ, False –µ—Å–ª–∏ –æ—à–∏–±–∫–∞
    """
    url = f"https://api.telegram.org/bot{bot_token}/deleteWebhook"
    
    try:
        print("üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ webhook...")
        response = requests.post(url, timeout=30)
        
        if response.status_code == 200:
            result = response.json()
            if result.get("ok"):
                print("‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ API: {result.get('description', 'Unknown error')}")
                return False
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {e}")
        return False

def main():
    """Main function"""
    if len(sys.argv) < 2:
        print("‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("  python setup_webhook.py <BOT_TOKEN> <WEBHOOK_URL>")
        print("  python setup_webhook.py <BOT_TOKEN> --info")
        print("  python setup_webhook.py <BOT_TOKEN> --delete")
        print("\n–ü—Ä–∏–º–µ—Ä—ã:")
        print("  python setup_webhook.py 123456789:ABC-DEF1234ghIkl-zyx57W2v1u123ew11 https://aibot-xxxxx-uc.a.run.app/webhook")
        print("  python setup_webhook.py 123456789:ABC-DEF1234ghIkl-zyx57W2v1u123ew11 --info")
        print("  python setup_webhook.py 123456789:ABC-DEF1234ghIkl-zyx57W2v1u123ew11 --delete")
        sys.exit(1)
    
    bot_token = sys.argv[1]
    
    if len(sys.argv) == 3:
        if sys.argv[2] == "--info":
            # –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook
            print("üìä –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ webhook...")
            info = get_webhook_info(bot_token)
            if info:
                result = info.get("result", {})
                print(f"üì° URL: {result.get('url', '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')}")
                print(f"üî¢ Pending updates: {result.get('pending_update_count', 0)}")
                print(f"üìÖ Last error date: {result.get('last_error_date', 'N/A')}")
                print(f"‚ùå Last error message: {result.get('last_error_message', 'N/A')}")
                print(f"üîÑ Max connections: {result.get('max_connections', 'N/A')}")
            sys.exit(0)
        elif sys.argv[2] == "--delete":
            # –£–¥–∞–ª–∏—Ç—å webhook
            delete_webhook(bot_token)
            sys.exit(0)
        else:
            # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å webhook
            webhook_url = sys.argv[2]
            if not webhook_url.startswith("https://"):
                print("‚ùå Webhook URL –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å https://")
                sys.exit(1)
            
            success = set_webhook(bot_token, webhook_url)
            if success:
                print("\nüéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
                print("üí° –¢–µ–ø–µ—Ä—å –≤–∞—à –±–æ—Ç –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ webhook")
                print("üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å: python setup_webhook.py <BOT_TOKEN> --info")
            else:
                print("\n‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å")
                sys.exit(1)
    else:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤")
        sys.exit(1)

if __name__ == "__main__":
    main()

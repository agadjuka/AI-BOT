#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤–æ–π keep-alive —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —Å HTTP –∑–∞–ø—Ä–æ—Å–∞–º–∏
"""
import os
import asyncio
import httpx
from datetime import datetime

async def test_keep_alive_http_function():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é send_keep_alive_request –Ω–∞–ø—Ä—è–º—É—é"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ send_keep_alive_request...")
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ main.py
    import sys
    sys.path.append('.')
    
    try:
        from main import send_keep_alive_request
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å —Ä–∞–∑–Ω—ã–º–∏ URL
        test_urls = [
            "https://ai-bot-366461711404.asia-southeast1.run.app",
            "http://localhost:8080",
            "https://httpbin.org/status/200"  # –¢–µ—Å—Ç–æ–≤—ã–π URL –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        ]
        
        for url in test_urls:
            print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º URL: {url}")
            try:
                await send_keep_alive_request(url)
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ {url}: {e}")
                
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ main.py –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ç–æ–π –∂–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏")

async def test_service_endpoints(service_url: str):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å endpoints —Å–µ—Ä–≤–∏—Å–∞"""
    print(f"üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ endpoints —Å–µ—Ä–≤–∏—Å–∞: {service_url}")
    
    endpoints = [
        "/",
        "/keepalive", 
        "/health",
        "/debug"
    ]
    
    base_url = service_url.rstrip('/')
    
    async with httpx.AsyncClient(timeout=10.0) as client:
        for endpoint in endpoints:
            url = f"{base_url}{endpoint}"
            try:
                print(f"üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º {url}...", end=" ")
                response = await client.get(url)
                print(f"‚úÖ HTTP {response.status_code}")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á–∞—Å—Ç—å –æ—Ç–≤–µ—Ç–∞ –¥–ª—è keepalive
                if endpoint == "/keepalive":
                    try:
                        data = response.json()
                        print(f"   –û—Ç–≤–µ—Ç: {data}")
                    except:
                        print(f"   –û—Ç–≤–µ—Ç: {response.text[:100]}...")
                        
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

async def simulate_keep_alive_cycle(service_url: str, cycles: int = 3):
    """–°–∏–º—É–ª–∏—Ä—É–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ü–∏–∫–ª–æ–≤ keep-alive"""
    print(f"üß™ –°–∏–º—É–ª—è—Ü–∏—è {cycles} —Ü–∏–∫–ª–æ–≤ keep-alive –¥–ª—è {service_url}")
    
    for i in range(cycles):
        print(f"\nüîÑ –¶–∏–∫–ª {i+1}/{cycles}")
        current_time = datetime.now().strftime("%H:%M:%S")
        print(f"‚è∞ –í—Ä–µ–º—è: {current_time}")
        
        try:
            from main import send_keep_alive_request
            await send_keep_alive_request(service_url)
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ü–∏–∫–ª–µ {i+1}: {e}")
        
        # –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –º–µ–∂–¥—É —Ü–∏–∫–ª–∞–º–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        if i < cycles - 1:
            print("‚è≥ –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ü–∏–∫–ª–∞...")
            await asyncio.sleep(5)

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π keep-alive —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —Å HTTP –∑–∞–ø—Ä–æ—Å–∞–º–∏")
    print("=" * 70)
    
    # –ü–æ–ª—É—á–∞–µ–º URL —Å–µ—Ä–≤–∏—Å–∞
    service_url = os.getenv("SERVICE_URL") or os.getenv("WEBHOOK_URL")
    
    if not service_url:
        print("‚ö†Ô∏è SERVICE_URL –∏–ª–∏ WEBHOOK_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
        print("   export SERVICE_URL=https://your-service-url")
        print("   –∏–ª–∏")
        print("   export WEBHOOK_URL=https://your-service-url")
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–∑–≤–µ—Å—Ç–Ω—ã–π URL –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        service_url = "https://ai-bot-366461711404.asia-southeast1.run.app"
        print(f"\nüß™ –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–∑–≤–µ—Å—Ç–Ω—ã–π URL –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏: {service_url}")
    else:
        print(f"‚úÖ URL —Å–µ—Ä–≤–∏—Å–∞: {service_url}")
    
    print("\n" + "=" * 70)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    asyncio.run(test_keep_alive_http_function())
    
    if service_url:
        print("\n" + "=" * 70)
        asyncio.run(test_service_endpoints(service_url))
        
        print("\n" + "=" * 70)
        asyncio.run(simulate_keep_alive_cycle(service_url, cycles=2))
    
    print("\n" + "=" * 70)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
    print("\nüí° –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("   1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: python main.py")
    print("   2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ SERVICE_URL: export SERVICE_URL=http://localhost:8080")
    print("   3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç: python test_keep_alive_http.py")

if __name__ == "__main__":
    main()

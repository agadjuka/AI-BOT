#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –±–æ—Ç–∞ –Ω–∞ Google Cloud Run —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π webhook
"""
import os
import subprocess
import sys
import json
import requests
import time

def run_command(command, description):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –∏ –≤—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    print(f"üîÑ {description}...")
    try:
        result = subprocess.run(command, shell=True, check=True, capture_output=True, text=True)
        print(f"‚úÖ {description} - —É—Å–ø–µ—à–Ω–æ")
        if result.stdout:
            print(f"üì§ –í—ã–≤–æ–¥: {result.stdout}")
        return result
    except subprocess.CalledProcessError as e:
        print(f"‚ùå {description} - –æ—à–∏–±–∫–∞")
        print(f"üì§ –í—ã–≤–æ–¥: {e.stdout}")
        print(f"‚ùå –û—à–∏–±–∫–∞: {e.stderr}")
        return None

def get_cloud_run_url(project_id, service_name, region="asia-southeast1"):
    """–ü–æ–ª—É—á–∞–µ—Ç URL —Å–µ—Ä–≤–∏—Å–∞ Cloud Run"""
    command = f"gcloud run services describe {service_name} --region={region} --project={project_id} --format='value(status.url)'"
    result = run_command(command, f"–ü–æ–ª—É—á–µ–Ω–∏–µ URL —Å–µ—Ä–≤–∏—Å–∞ {service_name}")
    if result and result.stdout.strip():
        return result.stdout.strip()
    return None

def set_webhook_via_api(webhook_url, bot_token):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç webhook —á–µ—Ä–µ–∑ Telegram API"""
    webhook_api_url = f"https://api.telegram.org/bot{bot_token}/setWebhook"
    data = {
        "url": f"{webhook_url}/webhook",
        "drop_pending_updates": True
    }
    
    print(f"üîÑ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook: {webhook_url}/webhook")
    try:
        response = requests.post(webhook_api_url, json=data, timeout=30)
        response.raise_for_status()
        result = response.json()
        
        if result.get("ok"):
            print(f"‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook: {result}")
        return result
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ webhook: {e}")
        return None

def get_webhook_info(bot_token):
    """–ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º webhook"""
    webhook_info_url = f"https://api.telegram.org/bot{bot_token}/getWebhookInfo"
    
    print(f"üîÑ –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ webhook")
    try:
        response = requests.get(webhook_info_url, timeout=30)
        response.raise_for_status()
        result = response.json()
        
        if result.get("ok"):
            webhook_info = result.get("result", {})
            print(f"üìä –¢–µ–∫—É—â–∏–π webhook URL: {webhook_info.get('url', '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')}")
            print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–∂–∏–¥–∞—é—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {webhook_info.get('pending_update_count', 0)}")
            return webhook_info
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ webhook: {result}")
        return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ webhook: {e}")
        return None

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è"""
    print("üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ AI Bot –Ω–∞ Google Cloud Run")
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
    PROJECT_ID = "just-advice-470905-a3"
    SERVICE_NAME = "aibot"
    REGION = "asia-southeast1"
    BOT_TOKEN = "8291213805:AAEHDlkDCHLQ3RFtrB5HLMeU-nGzF1hOZYE"
    
    print(f"üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:")
    print(f"   –ü—Ä–æ–µ–∫—Ç: {PROJECT_ID}")
    print(f"   –°–µ—Ä–≤–∏—Å: {SERVICE_NAME}")
    print(f"   –†–µ–≥–∏–æ–Ω: {REGION}")
    print(f"   –ë–æ—Ç —Ç–æ–∫–µ–Ω: {BOT_TOKEN[:10]}...")
    
    # 1. –°–±–æ—Ä–∫–∞ –∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ
    print("\n" + "="*50)
    print("1. –°–±–æ—Ä–∫–∞ –∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ Cloud Run")
    print("="*50)
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è webhook
    webhook_url_env = f"WEBHOOK_URL=https://{SERVICE_NAME}-{PROJECT_ID}.{REGION}.run.app"
    
    deploy_command = f"""
    gcloud run deploy {SERVICE_NAME} \
        --source . \
        --region {REGION} \
        --project {PROJECT_ID} \
        --platform managed \
        --allow-unauthenticated \
        --set-env-vars WEBHOOK_URL=https://{SERVICE_NAME}-{PROJECT_ID}.{REGION}.run.app \
        --memory 1Gi \
        --cpu 1 \
        --timeout 300 \
        --max-instances 10
    """
    
    result = run_command(deploy_command, "–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ Cloud Run")
    if not result:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–∏")
        return False
    
    # 2. –ü–æ–ª—É—á–µ–Ω–∏–µ URL —Å–µ—Ä–≤–∏—Å–∞
    print("\n" + "="*50)
    print("2. –ü–æ–ª—É—á–µ–Ω–∏–µ URL —Å–µ—Ä–≤–∏—Å–∞")
    print("="*50)
    
    webhook_url = get_cloud_run_url(PROJECT_ID, SERVICE_NAME, REGION)
    if not webhook_url:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å URL —Å–µ—Ä–≤–∏—Å–∞")
        return False
    
    print(f"‚úÖ URL —Å–µ—Ä–≤–∏—Å–∞: {webhook_url}")
    
    # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞
    print("\n" + "="*50)
    print("3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞")
    print("="*50)
    
    health_url = f"{webhook_url}/"
    print(f"üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏: {health_url}")
    
    try:
        response = requests.get(health_url, timeout=30)
        if response.status_code == 200:
            print("‚úÖ –°–µ—Ä–≤–∏—Å –¥–æ—Å—Ç—É–ø–µ–Ω")
            print(f"üìä –û—Ç–≤–µ—Ç: {response.json()}")
        else:
            print(f"‚ùå –°–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏: {e}")
        return False
    
    # 4. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook
    print("\n" + "="*50)
    print("4. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook")
    print("="*50)
    
    # –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook
    get_webhook_info(BOT_TOKEN)
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π webhook
    webhook_result = set_webhook_via_api(webhook_url, BOT_TOKEN)
    if not webhook_result or not webhook_result.get("ok"):
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å webhook")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    print("\nüîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook...")
    time.sleep(2)
    get_webhook_info(BOT_TOKEN)
    
    # 5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ webhook
    print("\n" + "="*50)
    print("5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ webhook")
    print("="*50)
    
    test_webhook_url = f"{webhook_url}/get_webhook"
    print(f"üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ webhook endpoint: {test_webhook_url}")
    
    try:
        response = requests.get(test_webhook_url, timeout=30)
        if response.status_code == 200:
            print("‚úÖ Webhook endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"üìä –û—Ç–≤–µ—Ç: {response.json()}")
        else:
            print(f"‚ùå Webhook endpoint –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ webhook: {e}")
    
    # 6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ FastAPI docs
    print("\nüîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ FastAPI –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏...")
    docs_url = f"{webhook_url}/docs"
    try:
        response = requests.get(docs_url, timeout=30)
        if response.status_code == 200:
            print(f"‚úÖ FastAPI docs –¥–æ—Å—Ç—É–ø–Ω—ã: {docs_url}")
        else:
            print(f"‚ö†Ô∏è FastAPI docs –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã: {response.status_code}")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ docs: {e}")
    
    print("\n" + "="*50)
    print("‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("="*50)
    print(f"üåê URL —Å–µ—Ä–≤–∏—Å–∞: {webhook_url}")
    print(f"üì° Webhook URL: {webhook_url}/webhook")
    print(f"‚ù§Ô∏è Health check: {webhook_url}/")
    print(f"üîß Webhook info: {webhook_url}/get_webhook")
    print("\nüí° –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è!")
    
    return True

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)

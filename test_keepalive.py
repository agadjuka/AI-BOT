#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è keep-alive —Ñ—É–Ω–∫—Ü–∏–∏
–ú–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã
"""
import asyncio
import httpx
import time
from datetime import datetime

async def test_keepalive_endpoint():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç /keepalive endpoint"""
    base_url = "http://localhost:8080"
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ keep-alive endpoint...")
    
    try:
        async with httpx.AsyncClient() as client:
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º /keepalive endpoint
            response = await client.get(f"{base_url}/keepalive")
            
            if response.status_code == 200:
                data = response.json()
                print(f"‚úÖ Keep-alive endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç")
                print(f"üìä –û—Ç–≤–µ—Ç: {data}")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ keep-alive endpoint: {response.status_code}")
                return False
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ localhost:8080")
        return False

async def test_health_check():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç / endpoint (health check)"""
    base_url = "http://localhost:8080"
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ health check endpoint...")
    
    try:
        async with httpx.AsyncClient() as client:
            response = await client.get(f"{base_url}/")
            
            if response.status_code == 200:
                data = response.json()
                print(f"‚úÖ Health check —Ä–∞–±–æ—Ç–∞–µ—Ç")
                print(f"üìä –û—Ç–≤–µ—Ç: {data}")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ health check: {response.status_code}")
                return False
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

async def simulate_keepalive_requests():
    """–°–∏–º—É–ª–∏—Ä—É–µ—Ç –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üîÑ –°–∏–º—É–ª—è—Ü–∏—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏—Ö keep-alive –∑–∞–ø—Ä–æ—Å–æ–≤...")
    print("üí° –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
    
    try:
        while True:
            print(f"\n‚è∞ {datetime.now().strftime('%H:%M:%S')} - –û—Ç–ø—Ä–∞–≤–∫–∞ keep-alive –∑–∞–ø—Ä–æ—Å–∞...")
            
            success = await test_keepalive_endpoint()
            if success:
                print("‚úÖ Keep-alive –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω")
            else:
                print("‚ùå Keep-alive –∑–∞–ø—Ä–æ—Å –Ω–µ—É–¥–∞—á–µ–Ω")
            
            # –ñ–¥–µ–º 30 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –∑–∞–ø—Ä–æ—Å–æ–º
            await asyncio.sleep(30)
            
    except KeyboardInterrupt:
        print("\nüõë –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ keep-alive —Ñ—É–Ω–∫—Ü–∏–∏")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–µ endpoints
    health_ok = await test_health_check()
    keepalive_ok = await test_keepalive_endpoint()
    
    if health_ok and keepalive_ok:
        print("\n‚úÖ –í—Å–µ –±–∞–∑–æ–≤—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–º—É–ª—è—Ü–∏—é –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤...")
        await simulate_keepalive_requests()
    else:
        print("\n‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞.")

if __name__ == "__main__":
    asyncio.run(main())

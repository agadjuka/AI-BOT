"""
–õ–µ–Ω–∏–≤—ã–π –∑–∞–≥—Ä—É–∑—á–∏–∫ OpenCV –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
–ó–∞–≥—Ä—É–∂–∞–µ—Ç OpenCV —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Å –ø–æ–ª–Ω–æ–π –∏–∑–æ–ª—è—Ü–∏–µ–π –¥–ª—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
"""
import sys
import gc
from typing import Optional, Any
import warnings

def get_opencv():
    """
    –õ–µ–Ω–∏–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ OpenCV - —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–∞–∂–¥—ã–π —Ä–∞–∑ –¥–ª—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
    """
    try:
        print("üîç –ó–∞–≥—Ä—É–∂–∞–µ–º OpenCV –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...")
        import cv2
        print("‚úÖ OpenCV –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        return cv2
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ OpenCV: {e}")
        raise
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ OpenCV: {e}")
        raise

def unload_opencv():
    """
    –í—ã–≥—Ä—É–∂–∞–µ—Ç OpenCV –∏–∑ –ø–∞–º—è—Ç–∏ –¥–ª—è –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
    """
    try:
        print("üßπ –í—ã–≥—Ä—É–∂–∞–µ–º OpenCV –∏–∑ –ø–∞–º—è—Ç–∏...")
        
        # –û—á–∏—â–∞–µ–º –∫—ç—à OpenCV (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ)
        try:
            if 'cv2' in sys.modules:
                cv2_module = sys.modules['cv2']
                if hasattr(cv2_module, 'destroyAllWindows'):
                    cv2_module.destroyAllWindows()
        except Exception:
            # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ destroyAllWindows (–Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ)
            pass
        
        # –£–¥–∞–ª—è–µ–º –º–æ–¥—É–ª—å –∏–∑ sys.modules
        if 'cv2' in sys.modules:
            del sys.modules['cv2']
        
        # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞ –º—É—Å–æ—Ä–∞
        gc.collect()
        
        print("‚úÖ OpenCV –≤—ã–≥—Ä—É–∂–µ–Ω –∏–∑ –ø–∞–º—è—Ç–∏")
        
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ OpenCV: {e}")
        # –ù–µ –ø–æ–¥–Ω–∏–º–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ - —ç—Ç–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ

def is_opencv_loaded() -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ OpenCV –≤ sys.modules
    """
    return 'cv2' in sys.modules

def with_opencv(func):
    """
    –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç OpenCV
    –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç OpenCV –ø–µ—Ä–µ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º –∏ –≤—ã–≥—Ä—É–∂–∞–µ—Ç –ø–æ—Å–ª–µ
    """
    def wrapper(*args, **kwargs):
        # –ó–∞–≥—Ä—É–∂–∞–µ–º OpenCV (—Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä)
        cv2 = get_opencv()
        
        try:
            # –í—ã–ø–æ–ª–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é
            result = func(cv2, *args, **kwargs)
            return result
        finally:
            # –í—ã–≥—Ä—É–∂–∞–µ–º OpenCV –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
            unload_opencv()
    
    return wrapper

def with_opencv_async(func):
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç OpenCV
    """
    async def wrapper(*args, **kwargs):
        # –ó–∞–≥—Ä—É–∂–∞–µ–º OpenCV (—Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä)
        cv2 = get_opencv()
        
        try:
            # –í—ã–ø–æ–ª–Ω—è–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
            result = await func(cv2, *args, **kwargs)
            return result
        finally:
            # –í—ã–≥—Ä—É–∂–∞–µ–º OpenCV –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
            unload_opencv()
    
    return wrapper

class OpenCVContext:
    """
    –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å OpenCV
    –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç –∏ –≤—ã–≥—Ä—É–∂–∞–µ—Ç OpenCV —Å –ø–æ–ª–Ω–æ–π –∏–∑–æ–ª—è—Ü–∏–µ–π –¥–ª—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
    """
    
    def __init__(self):
        self.cv2 = None
        self._is_loaded = False
    
    def __enter__(self):
        # –ó–∞–≥—Ä—É–∂–∞–µ–º OpenCV –¥–ª—è —ç—Ç–æ–≥–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        try:
            print("üîç –ó–∞–≥—Ä—É–∂–∞–µ–º OpenCV –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...")
            import cv2
            self.cv2 = cv2
            self._is_loaded = True
            print("‚úÖ OpenCV –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        except ImportError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ OpenCV: {e}")
            raise
        except Exception as e:
            print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ OpenCV: {e}")
            raise
        return self.cv2
    
    def __exit__(self, exc_type, exc_val, exc_tb):
        # –í—ã–≥—Ä—É–∂–∞–µ–º OpenCV —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –º—ã –µ–≥–æ –∑–∞–≥—Ä—É–∂–∞–ª–∏
        if self._is_loaded and self.cv2 is not None:
            try:
                print("üßπ –í—ã–≥—Ä—É–∂–∞–µ–º OpenCV –∏–∑ –ø–∞–º—è—Ç–∏...")
                
                # –û—á–∏—â–∞–µ–º –∫—ç—à OpenCV (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ)
                try:
                    if hasattr(self.cv2, 'destroyAllWindows'):
                        self.cv2.destroyAllWindows()
                except Exception:
                    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ destroyAllWindows (–Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ)
                    pass
                
                # –£–¥–∞–ª—è–µ–º –º–æ–¥—É–ª—å –∏–∑ sys.modules
                if 'cv2' in sys.modules:
                    del sys.modules['cv2']
                
                # –û—á–∏—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
                self.cv2 = None
                self._is_loaded = False
                
                # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞ –º—É—Å–æ—Ä–∞
                gc.collect()
                
                print("‚úÖ OpenCV –≤—ã–≥—Ä—É–∂–µ–Ω –∏–∑ –ø–∞–º—è—Ç–∏")
                
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ OpenCV: {e}")
                # –ù–µ –ø–æ–¥–Ω–∏–º–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ - —ç—Ç–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ
        return False  # –ù–µ –ø–æ–¥–∞–≤–ª—è–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏—è

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ OpenCV –±–µ–∑ –∑–∞–≥—Ä—É–∑–∫–∏
def check_opencv_availability() -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å OpenCV –±–µ–∑ –µ–≥–æ –∑–∞–≥—Ä—É–∑–∫–∏
    """
    try:
        import importlib.util
        spec = importlib.util.find_spec("cv2")
        return spec is not None
    except Exception:
        return False

#!/usr/bin/env python3
"""
–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ AI Bot
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ä–µ–∂–∏–º –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –≤–µ—Ä—Å–∏—é
"""
import os
import sys
import subprocess
from pathlib import Path

def detect_mode():
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ä–µ–∂–∏–º –∑–∞–ø—É—Å–∫–∞"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if os.getenv("WEBHOOK_URL") or os.getenv("PORT"):
        return "production"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
    if Path(".env").exists():
        return "local"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    if len(sys.argv) > 1:
        mode = sys.argv[1].lower()
        if mode in ["local", "dev", "development"]:
            return "local"
        elif mode in ["prod", "production", "deploy"]:
            return "production"
    
    # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ª–æ–∫–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º
    return "local"

def run_local():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é"""
    print("üè† –ó–∞–ø—É—Å–∫ –ª–æ–∫–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
    if not Path(".env").exists():
        print("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python dev_setup.py")
        return False
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º run_local.py
    try:
        subprocess.run([sys.executable, "run_local.py"], check=True)
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ª–æ–∫–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏: {e}")
        return False
    except FileNotFoundError:
        print("‚ùå –§–∞–π–ª run_local.py –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False

def run_production():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç production –≤–µ—Ä—Å–∏—é"""
    print("‚òÅÔ∏è –ó–∞–ø—É—Å–∫ production –≤–µ—Ä—Å–∏–∏...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    required_vars = ["BOT_TOKEN", "PROJECT_ID"]
    missing_vars = [var for var in required_vars if not os.getenv(var)]
    
    if missing_vars:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: {', '.join(missing_vars)}")
        print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ª–æ–∫–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º")
        return False
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º main.py
    try:
        subprocess.run([sys.executable, "main.py"], check=True)
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ production –≤–µ—Ä—Å–∏–∏: {e}")
        return False
    except FileNotFoundError:
        print("‚ùå –§–∞–π–ª main.py –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False

def show_help():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É"""
    print("üöÄ AI Bot - –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫")
    print("=" * 40)
    print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
    print("  python start.py              # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞")
    print("  python start.py local        # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ª–æ–∫–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º")
    print("  python start.py production   # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ production —Ä–µ–∂–∏–º")
    print("  python start.py help         # –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É")
    print()
    print("–†–µ–∂–∏–º—ã:")
    print("  local      - –õ–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ (polling)")
    print("  production - Production –¥–µ–ø–ª–æ–π (webhook)")
    print()
    print("–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
    print("  python dev_setup.py          # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ä–µ–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏")
    print("  python switch_mode.py        # –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –≤–µ—Ä—Å–∏—è–º–∏")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    if len(sys.argv) > 1 and sys.argv[1].lower() in ["help", "-h", "--help"]:
        show_help()
        return
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º
    mode = detect_mode()
    print(f"üîç –û–ø—Ä–µ–¥–µ–ª–µ–Ω —Ä–µ–∂–∏–º: {mode}")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –≤–µ—Ä—Å–∏—é
    if mode == "local":
        success = run_local()
    else:
        success = run_production()
    
    if not success:
        print("\nüí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:")
        print("  1. python dev_setup.py  # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å—Ä–µ–¥—ã")
        print("  2. python start.py local  # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ª–æ–∫–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º")
        print("  3. python start.py help  # –°–ø—Ä–∞–≤–∫–∞")
        sys.exit(1)

if __name__ == "__main__":
    main()
